---
import { Icon } from 'astro-icon/components';

interface ListItem {
  text: string;
  emoji?: string;
  icon?: string;
  subtext?: string;
}

interface Props {
  items: ListItem[];
  class?: string;
  variant?: 'default' | 'compact' | 'feature';
}

const { items, class: className, variant = 'default' } = Astro.props;

const getVariantStyles = (variant: string) => {
  switch (variant) {
    case 'compact':
      return 'space-y-2';
    case 'feature':
      return 'space-y-6';
    default:
      return 'space-y-4';
  }
};
---

<ul class:list={[getVariantStyles(variant), className, 'pl-2 md:pl-8']}>
  {
    items.map((item) => (
      <li class="group">
        <div class="flex items-center gap-3">
          {item.emoji ? (
            <span
              class="flex-shrink-0 bg-text/5 w-8 h-8 flex items-center justify-center rounded-lg text-lg group-hover:scale-110 transition-transform self-start"
              style="margin-top: 0.125rem;"
            >
              {item.emoji}
            </span>
          ) : item.icon ? (
            <div
              class="flex-shrink-0 bg-text/5 w-8 h-8 flex items-center justify-center rounded-lg group-hover:scale-110 transition-transform self-start"
              style="margin-top: 0.125rem;"
            >
              <Icon
                name={item.icon}
                class="w-5 h-5 text-text/80 group-hover:text-primary transition-colors"
              />
            </div>
          ) : (
            <div
              class="flex-shrink-0 bg-text/5 w-8 h-8 flex items-center justify-center rounded-lg group-hover:scale-110 transition-transform self-start"
              style="margin-top: 0.125rem;"
            >
              <Icon
                name="mingcute:minimize-fill"
                class="w-5 h-5 text-text/80 group-hover:text-primary transition-colors"
              />
            </div>
          )}

          <div class="flex-1">
            <p class="text-text/80 group-hover:text transition-colors leading-relaxed">
              {item.text}
            </p>
            {item.subtext && (
              <p class="text-sm text-text/60 mt-1 group-hover:text-text/80 transition-colors">
                {item.subtext}
              </p>
            )}
          </div>
        </div>
      </li>
    ))
  }
</ul>
