---
import type { GameNavigation } from '../../types/Navigation';
import BaseCard from '../common/BaseCard.astro';
import Tag from '../common/Tag.astro';

interface Props {
  game: GameNavigation;
}

const { game } = Astro.props;

const hasContent = (game: GameNavigation) => {
  return (
    game.sections.builds.length > 0 ||
    game.sections.guides.length > 0 ||
    game.sections.data.length > 0
  );
};

// map keys to display text
const keyMap = {
  builds: 'builds',
  guides: 'guides',
  data: 'resources',
};
---

{/* Base card wrapper with link functionality and disabled state */}
<BaseCard
  href={hasContent(game) ? `/${game.game}` : undefined}
  disabled={!hasContent(game)}
  scaled={false}
  class="hover:z-10 hover:scale-105 p-2 md:p-6"
>
  {/* Main content container - responsive flex layout */}
  <div
    class:list={[
      'relative flex flex-row md:flex-col items-center gap-2 md:gap-4',
      hasContent(game) ? 'hover:scale-105 transition-transform' : '',
    ]}
  >
    {/* Game emoji icon with floating animation */}
    <span
      class="text-4xl md:text-7xl bg-text/7 rounded-xl md:rounded-2xl p-2 md:p-6 transition-transform group-hover:animate-float"
    >
      {game.emoji}
    </span>

    {/* Text content container */}
    <div class="text-left md:text-center">
      {/* Game title */}
      <h2
        class="text-lg md:text-3xl font-bold transition-all duration-300 group-hover:text-primary mb-2 md:mb-2 uppercase"
      >
        {game.title}
      </h2>

      {/* Content status - either section counts or coming soon */}
      {
        hasContent(game) ? (
          /* Section count tags */
          <div class="flex flex-wrap gap-1 md:gap-3 md:justify-center text-text/60">
            {Object.entries(game.sections).map(
              ([key, items]) =>
                items.length > 0 && (
                  <Tag
                    text={`${items.length} ${keyMap[key as keyof typeof keyMap]}`}
                    class="text-xs md:text-sm px-2 md:px-3 transition-all duration-300 hover:scale-110 hover:bg-text/10"
                  />
                )
            )}
          </div>
        ) : (
          /* Coming soon indicator */
          <span class="text-warning/80 font-semibold animate-pulse">coming soon</span>
        )
      }
    </div>
  </div>
</BaseCard>

<style>
  /* Floating animation for the game emoji on hover */
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-float {
    animation: float 2s ease-in-out infinite;
  }
</style>
