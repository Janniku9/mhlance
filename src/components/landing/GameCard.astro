---
import type { GameNavigation } from '../../types/Navigation';

interface Props {
  game: GameNavigation;
}

const { game } = Astro.props;

const hasContent = (game: GameNavigation) => {
  return (
    game.sections.builds.length > 0 ||
    game.sections.guides.length > 0 ||
    game.sections.data.length > 0
  );
};

// map keys to display text
const keyMap = {
  builds: 'builds',
  guides: 'guides',
  data: 'resources',
};
---

<a
  href={hasContent(game) ? `/${game.game}` : '#'}
  class:list={[
    'group relative bg-background-dark border border-text/10 rounded-3xl p-12 transition-all duration-300',
    'animate-fade-in hover:z-10',
    hasContent(game)
      ? 'hover:bg-background-darker hover:scale-105  hover:shadow-2xl hover:shadow-primary/5'
      : 'cursor-not-allowed opacity-80',
  ]}
>
  <div
    class="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent rounded-3xl opacity-0 group-hover:opacity-100 transition-all duration-300"
  >
  </div>
  <div
    class:list={[
      'relative flex flex-col items-center gap-8',
      hasContent(game) ? 'hover:scale-105 transition-transform' : '',
    ]}
  >
    <span class="text-7xl bg-text/5 rounded-2xl p-8 transition-transform group-hover:animate-float"
      >{game.emoji}</span
    >
    <div class="text-center">
      <h2
        class="text-3xl font-bold transition-all duration-300 group-hover:text-primary mb-4 uppercase"
      >
        {game.title}
      </h2>
      {
        hasContent(game) ? (
          <div class="flex flex-wrap gap-3 justify-center text-text/60">
            {Object.entries(game.sections).map(
              ([key, items]) =>
                items.length > 0 && (
                  <span class="text-sm px-3 py-1 bg-text/5 rounded-full transition-all duration-300 hover:scale-110 hover:bg-text/10">
                    {items.length} {keyMap[key as keyof typeof keyMap]}
                  </span>
                )
            )}
          </div>
        ) : (
          <span class="text-warning/80 font-semibold animate-pulse">Coming Soon</span>
        )
      }
    </div>
  </div>
</a>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.5s ease-out forwards;
  }

  .animate-float {
    animation: float 2s ease-in-out infinite;
  }
</style>
