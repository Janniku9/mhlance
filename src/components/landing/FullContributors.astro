---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import TwitchIcon from '../icons/Twitch.astro';
import type { Contributor } from '../../types/Contributors';

interface Props {
  contributors: Contributor[];
}

const { contributors } = Astro.props;

// Function to get social icon
const getSocialIcon = (platform: string) => {
  switch (platform) {
    case 'youtube':
      return { type: 'icon', name: 'mingcute:youtube-fill' };
    case 'twitch':
      return { type: 'custom' };
    case 'twitter':
      return { type: 'icon', name: 'mingcute:social-x-line' };
    case 'discord':
      return { type: 'icon', name: 'mingcute:discord-fill' };
    default:
      return null;
  }
};
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-12 max-w-7xl w-full">
  {contributors.map((contributor, index) => (
    <div
      data-build-card-auto-hover
      class:list={[
        'group relative bg-background-dark border border-text/10 rounded-xl md:rounded-3xl overflow-hidden',
        'transition-all duration-300 hover:bg-background-darker hover:scale-[1.02]',
        'hover:shadow-2xl hover:shadow-primary/5 animate-fade-in',
      ]}
      style={`animation-delay: ${index * 0.05}s`}
    >
      <!-- Hover gradient overlay -->
      <div
        class="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent
              opacity-0 group-hover:opacity-100 transition-all duration-300"
      >
      </div>

      <!-- Content -->
      <div class="p-6 flex flex-col items-center text-center">
        <!-- Avatar/Image -->
        {contributor.image ? (
          <div class="mb-4 relative w-24 h-24 rounded-xl overflow-hidden border-2 border-text/10 group-hover:border-primary/40 transition-all duration-300">
            <Image
              src={contributor.image}
              alt={contributor.name}
              class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
            />
          </div>
        ) : (
          <div class="w-24 h-24 rounded-xl bg-text/5 flex items-center justify-center mb-4 border-2 border-text/10 group-hover:border-primary/40 transition-all duration-300">
            <Icon
              name="mingcute:user-2-fill"
              class="w-12 h-12 text-text/80 group-hover:text-primary transition-colors"
            />
          </div>
        )}
        
        <!-- Name -->
        <h3 class="text-xl font-bold group-hover:text-primary transition-colors uppercase">
          {contributor.name}
        </h3>
        
        <!-- Contribution description -->
        <div class="mt-3 mb-6 min-h-12">
          <p class="text-sm text-text/80 group-hover:text-text/90 transition-colors">
            {contributor.contributions.overall || Object.values(contributor.contributions)[0]}
          </p>
        </div>
        
        <!-- Social links -->
        <div class="flex gap-2 justify-center mt-auto">
          {Object.entries(contributor.socials).map(([platform, url]) => {
            const socialIcon = getSocialIcon(platform);
            return (
              url && (
                <a
                  href={url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="p-2 rounded-lg bg-text/5 hover:bg-primary/20 transition-all duration-200 hover:scale-110"
                  aria-label={platform}
                >
                  {socialIcon?.type === 'icon' ? (
                    <Icon
                      name={socialIcon.name}
                      class="w-5 h-5 text-text/80 hover:text-primary transition-colors"
                    />
                  ) : (
                    <TwitchIcon class="w-5 h-5 text-text/80 hover:text-primary transition-colors" />
                  )}
                </a>
              )
            );
          })}
        </div>
      </div>
    </div>
  ))}
</div>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    opacity: 0;
    animation: fade-in 0.5s ease-out forwards;
  }

  [style*="animation-delay"] {
    opacity: 0;
    animation: fade-in 0.5s ease-out forwards;
  }
</style>

<script>
  import autoHoverDirective from '../../directives/auto-hover';
  document.querySelectorAll('[data-build-card-auto-hover]').forEach((element) => {
    if (element instanceof HTMLElement) autoHoverDirective(element);
  });
</script>