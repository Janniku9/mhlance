---
import { Icon } from 'astro-icon/components';
import BaseCard from '../common/BaseCard.astro';
import BaseCardTitle from '../common/BaseCardTitle.astro';
import BaseCardSubTitle from '../common/BaseCardSubTitle.astro';

interface Props {
  title: string;
  description: string;

  // Primary ingredients (typically for stat bonuses)
  primaryIngredients: {
    type: string; // e.g., "Meat", "Vegetables", etc.
    count: number; // How many of this ingredient (usually 6, 4, or 2)
    emoji: string; // The emoji to represent this ingredient
    bonus?: string; // Optional bonus text (e.g., "+15 Attack")
  };

  // Secondary ingredients (typically for skills)
  ingredients: Array<{
    emoji: string;
    count: number;
    color?: string; // Optional color name
    tooltip?: string; // Optional tooltip
  }>;

  // Food skills
  skills: Array<{
    name: string;
    description: string;
  }>;

  class?: string;
  hoverable?: boolean;
  scaled?: boolean;
  href?: string;
  disabled?: boolean;
}

const {
  title,
  description,
  primaryIngredients,
  ingredients,
  skills,
  class: className,
  hoverable = true,
  scaled = true,
  href,
  disabled = false,
} = Astro.props;

// Helper function to repeat emoji based on count
const repeatEmoji = (emoji: string, count: number) => {
  return Array(count).fill(emoji);
};

// Get total ingredient count
const totalIngredientCount = ingredients.reduce((sum, item) => sum + item.count, 0);
---

<BaseCard
  class={className}
  hoverable={hoverable}
  scaled={scaled}
  href={href}
  disabled={disabled}
  dataAttribute="data-food-card-auto-hover"
>
  <div class="p-4 sm:p-6 md:p-8 h-full flex flex-col">
    <!-- Header -->
    <BaseCardTitle title={title} class="mb-2" />

    <!-- Description -->
    <p class="text-sm text-text/80 mb-6">
      {description}
    </p>

    <!-- Primary Ingredients Section -->
    <div class="mb-5">
      <div class="flex items-center gap-2 mb-2">
        <span class="text-sm font-medium text-text/60">{primaryIngredients.type}</span>
        {
          primaryIngredients.bonus && (
            <span class="text-xs px-2 py-0.5 rounded-full bg-primary/10 text-primary">
              {primaryIngredients.bonus}
            </span>
          )
        }
      </div>

      <div class="flex flex-wrap gap-1 px-3 py-2 rounded-lg bg-text/7">
        {
          repeatEmoji(primaryIngredients.emoji, primaryIngredients.count).map((emoji) => (
            <span class="text-xl cursor-help" title={`${primaryIngredients.type} ingredient`}>
              {emoji}
            </span>
          ))
        }
      </div>
    </div>

    <!-- Secondary Ingredients Section -->
    <div class="mb-6">
      <div class="flex items-center gap-2 mb-2">
        <span class="text-sm font-medium text-text/60">Color Ingredients</span>
        {
          totalIngredientCount === 6 && (
            <span class="text-xs text-text/40">(Activates food skill)</span>
          )
        }
      </div>

      <div class="flex flex-wrap gap-1 px-3 py-2 rounded-lg bg-text/7">
        {
          ingredients.map((item) =>
            repeatEmoji(item.emoji, item.count).map((emoji) => (
              <span
                class="text-xl cursor-help"
                title={item.tooltip || `${item.color || 'Colored'} ingredient`}
              >
                {emoji}
              </span>
            ))
          )
        }
      </div>
    </div>

    <!-- Skills Section -->
    <div class="mt-auto">
      <span class="text-sm text-text/60 block mb-2">FOOD SKILLS</span>

      <div class="space-y-3">
        {
          skills.map((skill) => (
            <div>
              <div class="flex items-center gap-2 mb-1">
                <Icon name="mingcute:lightning-fill" class="w-4 h-4 text-secondary flex-shrink-0" />
                <BaseCardSubTitle title={skill.name} />
              </div>
              <p class="text-sm text-text/80 pl-6">{skill.description}</p>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</BaseCard>

<script>
  import autoHoverDirective from '../../directives/auto-hover';
  document.querySelectorAll('[data-food-card-auto-hover]').forEach((element) => {
    if (element instanceof HTMLElement) autoHoverDirective(element);
  });
</script>
