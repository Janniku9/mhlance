---
import { Games } from '../../../data/games';
import { getGameFromPath } from '../../../utils/game';

const currentPath = Astro.url.pathname;
const selectedGame = getGameFromPath(currentPath);

const { class: className } = Astro.props;

const STYLES = {
  select: 'rounded-lg border-0 bg-background-darker text-text h-full text-xl',
  option: 'text-text-secondary text-xs',
} as const;
---

<select
  class:list={[STYLES.select, className]}
  aria-label="Select game"
  data-game-select
  transition:persist
  transition:name="game-select"
>
  <option value="" class={STYLES.option}>SELECT GAME</option>
  {
    Games.map((game) => (
      <option value={game.id} selected={selectedGame?.id === game.id} class={STYLES.option}>
        {game.name.toUpperCase()}
      </option>
    ))
  }
</select>

<script>
  import { navigate } from 'astro:transitions/client';

  // Handle select changes
  document.querySelectorAll('[data-game-select]').forEach((select) => {
    select?.addEventListener('change', (e) => {
      const gameId = (e.target as HTMLSelectElement).value;
      const newPath = gameId ? `/${gameId}` : '/';
      navigate(newPath);
    });
  });

  // Handle popstate (back/forward navigation)
  window.addEventListener('popstate', () => {
    const pathParts = window.location.pathname.split('/');
    const gameId = pathParts[1];
    // Update select without triggering change event
    document.querySelectorAll('[data-game-select]').forEach((select) => {
      if (select instanceof HTMLSelectElement) {
        select.value = gameId || '';
      }
    });
  });
</script>
