---
import { games } from '../../../data/Navigation';

interface Props {
  class?: string;
}

const { class: classList } = Astro.props;

// Get current path segments
const segments = Astro.url.pathname.split('/').filter(Boolean);
const gameId = segments[0];
const sectionType = segments[1];
const sectionId = segments[2];

// Get current game data
const currentGame = games.find((game) => game.game === gameId);

// Get all sections with showInQuickLinks from the current game
const quickLinkSections = currentGame
  ? Object.entries(currentGame.sections).flatMap(([type, sections]) =>
      sections
        .filter((section) => section.showInQuickLinks)
        .map((section) => ({
          ...section,
          type,
          url: `/${gameId}/${type}/${section.id}`,
        }))
    )
  : [];
---

<div class={`flex flex-col items-center md:items-start gap-4 ${classList}`}>
  <h3 class="text-sm font-medium text-text/60 uppercase">Quick Links</h3>
  <div class="flex flex-wrap justify-center md:justify-start gap-4">
    {
      quickLinkSections.length > 0 &&
        quickLinkSections.map((section) => (
          <a
            href={section.url}
            class:list={[
              'flex items-center gap-2 px-3 py-2 rounded-lg transition-colors group',
              sectionId === section.id
                ? 'bg-primary/10 text-primary'
                : 'bg-background-dark hover:bg-primary/10',
            ]}
          >
            <span class="text-xl">{section.emoji}</span>
            <span
              class:list={[
                'text-sm transition-colors',
                sectionId === section.id ? 'text-primary' : 'group-hover:text-primary',
              ]}
            >
              {section.title}
            </span>
          </a>
        ))
    }
  </div>
</div>
