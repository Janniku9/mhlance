---
interface GifProps {
  src: string;
  title?: string;
  maxWidth?: string;
  class?: string;
  reversed?: boolean;
}

const { src, title, maxWidth, class: className, reversed = false } = Astro.props;
---

<div
  data-gif-card-auto-hover
  class:list={[
    'group relative bg-background-dark border border-text/10 rounded-xl overflow-hidden',
    'transition-all duration-300 hover:bg-background-darker',
    'hover:shadow-2xl hover:shadow-primary/5',
    className,
  ]}
>
  <!-- Hover gradient overlay -->
  <div
    class="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent
            opacity-0 group-hover:opacity-100 transition-all duration-300"
  >
  </div>

  <div class="p-4 lg:p-6 flex flex-col gap-6 md:grid md:grid-cols-2">
    <!-- Title (mobile only) -->
    {
      title && (
        <h3 class="text-xl font-bold md:hidden group-hover:text-primary transition-colors">
          {title}
        </h3>
      )
    }

    <!-- Content wrapper with conditional order -->
    <div
      class:list={['relative rounded-lg overflow-hidden', reversed ? 'md:order-2' : 'md:order-1']}
      style={maxWidth ? `max-width: ${maxWidth};` : ''}
    >
      <iframe src={src} class="w-full aspect-video" frameborder="0" allowfullscreen></iframe>
    </div>

    <div class:list={['flex flex-col justify-center', reversed ? 'md:order-1' : 'md:order-2']}>
      {
        title && (
          <h3 class="hidden md:block text-xl font-bold mb-3 group-hover:text-primary transition-colors">
            {title}
          </h3>
        )
      }

      <p class="text-sm text-text/80 group-hover:text-primary/80 transition-colors">
        <slot />
      </p>
    </div>
  </div>
</div>

<script>
  import autoHoverDirective from '../../../directives/auto-hover';
  document.querySelectorAll('[data-gif-card-auto-hover]').forEach((element) => {
    if (element instanceof HTMLElement) autoHoverDirective(element);
  });
</script>
