---
import type { Section } from '../../../types/Sections';
import { Icon } from 'astro-icon/components';

interface Props {
  title: string;
  items: Section[];
  baseUrl: string;
}

const { title, items, baseUrl } = Astro.props;
---

<div class="relative group/nav">
  <button
    class="text-lg text-text hover:text-primary transition-colors py-3 flex items-center gap-2"
  >
    {title}
    <Icon
      name="mingcute:down-fill"
      class="w-5 h-5 transition-transform duration-200 group-hover/nav:rotate-180"
    />
  </button>

  <div
    class="absolute -left-24 top-full pt-3 opacity-0 invisible group-hover/nav:opacity-100 group-hover/nav:visible transition-all duration-200 z-50 transform origin-top scale-95 group-hover/nav:scale-100"
  >
    <div
      class="bg-background rounded-xl shadow-xl border border-text/10 p-6 min-w-[420px] animate-dropdown"
    >
      <ul class="space-y-4">
        {
          items.map((item, index) => (
            <li
              class="opacity-0 translate-y-2 group-hover/nav:opacity-100 group-hover/nav:translate-y-0 transition-all duration-200"
              style={`transition-delay: ${index * 50}ms`}
            >
              <a
                href={item.externalLink ? item.externalLink : `${baseUrl}/${item.id}`}
                target={item.externalLink ? '_blank' : undefined}
                rel={item.externalLink ? 'noopener noreferrer' : undefined}
                class="group block hover:bg-primary/10 rounded-lg p-3 transition-colors"
              >
                <div class="flex items-center gap-3">
                  {item.emoji && (
                    <span class="text-2xl bg-text/5 rounded-lg p-2 w-12 h-12 flex items-center justify-center">
                      {item.emoji}
                    </span>
                  )}
                  <div>
                    <span class="block text-base text-text group-hover:text-primary transition-colors uppercase">
                      {item.title}
                    </span>
                    {item.navDescription && (
                      <span class="block text-sm text-text/60 group-hover:text-primary/60 transition-colors mt-1">
                        {item.navDescription}
                      </span>
                    )}
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>

<style>
  @keyframes dropdown {
    from {
      opacity: 0;
      transform: translateY(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-dropdown {
    animation: dropdown 0.2s ease-out forwards;
  }
</style>
