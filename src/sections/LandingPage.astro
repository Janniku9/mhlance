---
import type { GameNavigation } from '../types/Navigation';

interface Props {
  games: GameNavigation[];
}

const { games } = Astro.props;
---

<div class="container mx-auto px-4">
  <div class="min-h-[calc(100vh-5rem)] flex flex-col items-center justify-center py-20">
    <h1 class="text-5xl md:text-7xl font-bold text-center mb-4">
      Choose Your <span class="text-primary">Adventure</span>
    </h1>
    <p class="text-xl text-text/80 mb-16 text-center">Select a game to begin your journey</p>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 max-w-7xl w-full">
      {
        games.map((game) => (
          <a
            href={`/${game.game}`}
            class="group relative bg-background-dark hover:bg-background-darker border border-text/10 rounded-3xl p-12 transition-all duration-300 hover:scale-105 hover:shadow-2xl hover:shadow-primary/5"
          >
            <div class="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity" />
            <div class="relative flex flex-col items-center gap-8">
              <span class="text-7xl bg-text/5 rounded-2xl p-8">{game.emoji}</span>
              <div class="text-center">
                <h2 class="text-3xl font-bold group-hover:text-primary transition-colors mb-4">
                  {game.title.toUpperCase()}
                </h2>
                <div class="flex gap-3 justify-center text-text/60">
                  {Object.entries(game.sections).map(
                    ([key, items]) =>
                      items.length > 0 && (
                        <span class="text-sm px-3 py-1 bg-text/5 rounded-full">
                          {items.length} {key}
                        </span>
                      )
                  )}
                </div>
              </div>
            </div>
          </a>
        ))
      }
    </div>
  </div>
</div>
